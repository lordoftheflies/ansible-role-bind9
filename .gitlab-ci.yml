# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.8.10

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  - curl -s https://raw.githubusercontent.com/profclems/glab/trunk/scripts/install.sh | sudo sh

test:
  script:
    - pip install -r requirements-test.txt
    - molecule test

# run:
#   script:
#     - python setup.py bdist_wheel
#     # an alternative approach is to install and run:
#     - pip install dist/*
#     # run the command here
#   artifacts:
#     paths:
#       - dist/*.whl

publish:
  variables:
    GALAXY_ROLE_NAME: $(echo "$CI_PROJECT_NAME" | tr '-' '_')
    GALAXY_ROLE_FULLNAME: "$GITLAB_USER_NAME.$GALAXY_ROLE_NAME"
    GALAXY_ROLE_ID: "ansible-galaxy info $ANSIBLE_GALAXY_NAME | grep -E 'id: [0-9]' | awk {'print $2'}"
    BADGE_LINK_URL_GALAXY_ROLE: https://galaxy.ansible.com/$GITLAB_USER_NAME/$GALAXY_ROLE_NAME
    BADGE_IMAGE_URL_GALAXY_ROLE: "https://img.shields.io/ansible/role/$GALAXY_ROLE_ID"
    BADGE_LINK_URL_GALAXY_DOWNLOADS: https://galaxy.ansible.com/$GITLAB_USER_NAME/$GALAXY_ROLE_NAME
    BADGE_IMAGE_URL_GALAXY_DOWNLOADS: "https://img.shields.io/ansible/role/d/$GALAXY_ROLE_ID"
    BADGE_LINK_URL_GALAXY_SCORE: https://galaxy.ansible.com/$GITLAB_USER_NAME/$GALAXY_ROLE_NAME
    BADGE_IMAGE_URL_GALAXY_SCORE: "https://img.shields.io/ansible/quality/$GALAXY_ROLE_ID"
    GITLAB_API_BADGE_ENDPOINT: "https://gitlab.example.com/api/v4/projects/:id/badges"
  script: |
    echo "Ansible Galaxy contains role $GALAXY_ROLE_FULLNAME with id=$GALAXY_ROLE_ID"
    echo "GALAXY_ROLE_FULLNAME=$GALAXY_ROLE_FULLNAME" >> galaxy.env
    echo "GALAXY_ROLE_ID=$GALAXY_ROLE_ID" >> galaxy.env
    curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" --data "link_url=$BADGE_LINK_URL_GALAXY_ROLE&image_url=BADGE_IMAGE_URL_GALAXY_ROLE" "$GITLAB_API_BADGE_ENDPOINT"
    curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" --data "link_url=$BADGE_LINK_URL_GALAXY_DOWNLOADS&image_url=BADGE_IMAGE_URL_GALAXY_DOWNLOADS" "$GITLAB_API_BADGE_ENDPOINT"
    curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN" --data "link_url=$BADGE_LINK_URL_GALAXY_SCORE&image_url=BADGE_IMAGE_URL_GALAXY_SCORE" "$GITLAB_API_BADGE_ENDPOINT"
  allow_failure: true
  when: manual
  artifacts:
    reports:
      dotenv: galaxy.env


pages:
  script:
    - pip install -r requirements-doc.txt
    - cd doc ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
